@using Newtonsoft.Json
@{
    Layout = null;

    // Simulated backend data for testing
    var jsonData = JsonConvert.SerializeObject(new[]
    {
        new {
            foundationId = "tas-1",
            foundationName = "TAS Foundation 1",
            orgs = new[]
            {
                new { orgId = "org-1", orgName = "Org One" },
                new { orgId = "org-2", orgName = "Org Two" }
            }
        },
        new {
            foundationId = "tas-2",
            foundationName = "TAS Foundation 2",
            orgs = new[]
            {
                new { orgId = "org-3", orgName = "Org Three" }
            }
        }
    });
}

<!DOCTYPE html>
<html>
<head>
    <title>Kendo Nested Grid - Razor Inside Template</title>
    @(Html.Kendo().StylesheetRegistrar().DefaultGroup(group => group.Add("kendo.common.min.css").Add("kendo.default.min.css")))
</head>
<body>
    
    <div id="gridContainer">
        @(Html.Kendo().Grid<dynamic>()
            .Name("foundationsGrid")
            .Columns(columns =>
            {
                columns.Bound("foundationName").Title("Foundation");
            })
            .ClientDetailTemplateId("orgsTemplate")
            .DataSource(ds => ds
                .Ajax()
                .PageSize(10)
                .Data(jsonData)
            )
        )
    </div>

    <!-- Template for child grid (Orgs) with server-side Kendo Grid helper -->
    <script id="orgsTemplate" type="text/kendo-tmpl">
        <div style="margin-left:20px;">
            @Html.Kendo().Grid<dynamic>()
                .Name("orgsGrid_static")
                .Columns(columns =>
                {
                    columns.Bound("orgName").Title("Organization");
                })
                .DataSource(ds => ds
                    .Ajax()
                    .DataSource(dsInner =>
                    {
                        dsInner.Data("#: orgs #"); // This is hardcoded; dynamic row binding not possible in this pure server-side example
                    })
                )
        </div>
    </script>

    @(Html.Kendo().ScriptRegistrar().jQuery(false).DefaultGroup(group => group
        .Add("jquery.min.js")
        .Add("kendo.all.min.js")
    ))

    <script>
        $(document).ready(function () {

            // Initialize the main grid with hardcoded data
            $("#foundationsGrid").data("kendoGrid").dataSource.data(@Html.Raw(jsonData));

            // Child grids: since we're injecting server-rendered grid markup,
            // the nested grid's datasource is static (from template) in this demo.
        });
    </script>

</body>
</html>